name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
        
    - name: Check coverage threshold
      if: matrix.node-version == '20.x'
      run: |
        COVERAGE=$(npm test -- --coverage --watchAll=false --silent | grep "All files" | awk '{print $10}' | sed 's/%//')
        if [ "$COVERAGE" -lt "80" ]; then
          echo "Coverage $COVERAGE% is below the required 80% threshold"
          exit 1
        fi
        echo "Coverage: $COVERAGE%"

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: development
        VITE_APP_ENV: development
        VITE_BUGSNAG_API_KEY: ${{ secrets.VITE_BUGSNAG_API_KEY_DEVELOPMENT }}
        VITE_ENABLE_ERROR_TRACKING: true
        VITE_ENABLE_PERFORMANCE_MONITORING: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: |
        # Only fail on high/critical vulnerabilities
        npm audit --audit-level high
        
        # Report moderate vulnerabilities as warnings
        moderate_vulns=$(npm audit --audit-level moderate --json | jq '.metadata.vulnerabilities.moderate // 0')
        if [ "$moderate_vulns" -gt 0 ]; then
          echo "::warning::Found $moderate_vulns moderate severity vulnerabilities"
          echo "These are typically development-only issues and don't affect production builds"
        fi
      
    - name: Run dependency vulnerability check
      uses: actions/dependency-review-action@v3
      if: github.event_name == 'pull_request'