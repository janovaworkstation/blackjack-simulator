name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test -- --watchAll=false
      
    - name: Build for staging
      run: npm run build
      env:
        NODE_ENV: staging
        VITE_APP_ENV: staging
        VITE_BUGSNAG_API_KEY: ${{ secrets.VITE_BUGSNAG_API_KEY_STAGING }}
        VITE_ENABLE_ERROR_TRACKING: true
        VITE_ENABLE_PERFORMANCE_MONITORING: true
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './dist'
        production-branch: never
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}
        
    - name: Run smoke tests against staging
      run: |
        echo "Running smoke tests against staging deployment"
        # Add smoke test commands here
        
    - name: Notify deployment status
      if: always() && vars.SLACK_NOTIFICATIONS_ENABLED == 'true'
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        text: |
          Staging deployment ${{ job.status }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Log deployment status (No Slack)
      if: always() && vars.SLACK_NOTIFICATIONS_ENABLED != 'true'
      run: |
        echo "::notice::Staging deployment ${{ job.status }}"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"
        echo "Consider setting up Slack notifications by configuring SLACK_WEBHOOK_URL secret and SLACK_NOTIFICATIONS_ENABLED variable"